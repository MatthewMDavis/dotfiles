" Speedup configurations
"------------------------

" Quick toggle between two files
nnoremap <leader><leader> <C-^>

" Use j/k to start, then scroll through autocomplete options
inoremap <expr> <C-j> ((pumvisible())?("\<C-n>"):("\<C-x><c-n>"))
inoremap <expr> <C-k> ((pumvisible())?("\<C-p>"):("\<C-x><c-k>"))

" Do not use <Ctrl-c> to break out to normal mode
" Use C-Space to Esc out of any mode
nnoremap <C-Space> <Esc>:noh<CR>
vnoremap <C-Space> <Esc>gV
onoremap <C-Space> <Esc>
cnoremap <C-Space> <C-c>
inoremap <C-Space> <Esc>`^
" Terminal sees <C-@> as <C-space> WTF, but ok
nnoremap <C-@> <Esc>:noh<CR>
vnoremap <C-@> <Esc>gV
onoremap <C-@> <Esc>
cnoremap <C-@> <C-c>
inoremap <C-@> <Esc>`^

" Setup nice command tab completion
set wildmenu
set wildmode=list:longest,full
set wildignore+=*.pyc

" Easy re-sourcing of vimrc
map <leader>sop :source %<cr>

" Doesn't seem I'm going to win on this one
command! W write

function! CurrenRelativeDirectory()
  let relative_dir = substitute(expand("%:p:h"), getcwd()."/", "", "")."/"
  return escape(relative_dir, " ")
endfunction

" Easy navigation for editing and cding
nmap <Leader>ec :e ~/code/
nmap <Leader>eh :e ~/
nmap <Leader>ew :CtrlP ~/wiki<cr>
nmap <Leader>cd :cd ~/code/
nnoremap <leader>er :e <C-r>=escape(expand("%:p:h"), ' ')<cr>/
nnoremap <leader>rr :r <C-r>=CurrenRelativeDirectory()<cr>
nnoremap <leader>sav :sav <C-r>=escape(expand("%:p:h"), ' ')<cr>/

"Make Y yank to end of line (like D, or C)
nmap Y y$

" Easy access to the start of the line
nnoremap 0 ^

" Leader-; to enter command mode. No more holding shift!
nnoremap <leader>; :
vnoremap <leader>; :

" Quickly open a second window to view files side by side
nmap <LEADER>vn :vsplit<CR>
nmap <LEADER>vs :vsplit<CR>

" Move one line at a time, aka 'fine ajdustment'
nnoremap j gj
nnoremap k gk

" Reselect pasted text. Mnem: 'Get pasted'
nnoremap gp `[v`]

" Go to position of last edit. Mnem: 'Go to Edit'
nnoremap ge `.

" vim:ft=vim
