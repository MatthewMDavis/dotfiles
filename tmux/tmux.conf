###########################
#  Configuration
###########################

# let tmux tell terminal the window title
set-option -g set-titles on
set-option -g set-titles-string "#S: window #I: #W"

# use 256 term for pretty colors
set -g default-terminal "screen-256color"

# set up the reattachment to user namespace so system clipboard is available
set -g default-command "reattach-to-user-namespace -l /usr/local/bin/zsh"

# mouse support
setw -g mouse on

# increase scroll-back history
set -g history-limit 5000

# decrease command delay (increases vim responsiveness)
set-option -sg escape-time 1

# increase repeat time for repeatable commands
set -g repeat-time 1000

# start window index at 1
set -g base-index 1

# start pane index at 1
setw -g pane-base-index 1

# highlight window when it has new activity
setw -g monitor-activity on
set -g visual-activity on

# re-number windows when one is closed
set -g renumber-windows on

# Copy mode
# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

###########################
#  Key Bindings
###########################

# tmux prefix is C-b (for now)
# unbind C-b
# set -g prefix C-a

# paste
unbind C-p
bind C-p paste-buffer

# window splitting
unbind %
bind | split-window -h -c '#{pane_current_path}'
unbind '"'
bind - split-window -v -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'

###################
# resize panes
###################

# fine adjust; shift-arrows
bind -n s-left resize-pane -L 2
bind -n s-right resize-pane -R 2
bind -n s-up resize-pane -U 1
bind -n s-down resize-pane -D 1

# Gross adjustment: Alt/Meta-Arrows
bind -n M-Left resize-pane -L 10
bind -n M-Right resize-pane -R 10
bind -n M-Up resize-pane -U 5
bind -n M-Down resize-pane -D 5

# automatic pane 25% at bottom, prefix
unbind t
bind t split-window -p 25

# Break off current pane to new window
bind b break-pane -d

####################################
# Session Management
####################################
# "break session" and "kill session"
bind-key C-x send-keys 'tat && exit' 'C-m'

# Open a menu of running tmux sessions
bind-key C-l choose-tree # Chosen to parallel NerdTree in Vim

# kill the session; repeat as needed to get all the way back to bare shell
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# Automatic saving and restoring of sessions with tmux-continuum


####################################
# force a reload of the config file
####################################

unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

##########################
# Vim Interaction
##########################

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Vim awareness of TMUX focus events
set -g focus-events on

# Session restoration for neovim via tmux-resurrect
set -g @resurrect-strategy-nvim 'session'

###########################
# Status Bar
###########################
source-file ~/.tmux/tmuxline_full

###########################
# Plugins
###########################

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'nhdaly/tmux-scroll-copy-mode'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Initialize Tmux plugin manager
run '~/.tmux/plugins/tpm/tpm'
